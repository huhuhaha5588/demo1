server.port=9090
server.servlet.context-path=/demo

#模版引擎
#thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#datasource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3298/htmlhandler?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=htmlhandler
spring.datasource.password=htmlhandler

#mybatis
mybatis.mapper-locations=classpath:com/dev/demo1/mapper/*.xml
mybatis.type-aliases-package=com.dev.demo1.**.entity


#日志级别
logging.level.root:info
logging.level.com.dev.demo1=debug

#日志在控制台的输出格式
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-3level %logger{50} --%msg%n

#日志在日志文件中的输出格式
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-3level %logger{50} --%msg%n

# 启用liquibase
liquibase.enabled=true
# 存储变化的文件（changelog）位置
spring.liquibase.change-log=classpath:db/master.xml
# 检查存储变化的文件是否存在
liquibase.check-change-log-location=true
# 分环境执行，若在 changelog 文件中设置了对应 context 属性，则只会执行与 dev 对应值的 changeset
liquibase.contexts=dev
# 执行前首先删除数据库，默认 false。若设置为 true，则执行变更前，会先删除目标数据库，请谨慎
liquibase.dropFirst=false
# 执行更新时将回滚 SQL 写入的文件路径
liquibase.rollback-file=
# 如果使用工程已配置的 datasource 数据源，则以下三个数据库连接参数可不配置
## 访问数据库的连接地址
#liquibase.url=jdbc:mysql://localhost:3298/htmlhandler?useUnicode=true&characterEncoding=utf-8
## 访问数据库的用户名
#liquibase.user=htmlhandler
## 访问数据库的密码
#liquibase.password=htmlhandler

